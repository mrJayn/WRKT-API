"""
Generated by 'django-admin startproject' using Django 4.2.2.

Read More ü†ö https://docs.djangoproject.com/en/4.2/topics/settings/
Documentation ü†ö https://docs.djangoproject.com/en/4.2/ref/settings/
Deployment checklist ü†ö https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/ 

Read More On:
    ‚ñ™ Language codes and Internationalization ü†ö https://docs.djangoproject.com/en/4.2/topics/i18n/
    ‚ñ™ Single time login using Sessions ü†ö https://dev.to/fleepgeek/prevent-multiple-sessions-for-a-user-in-your-django-application-13oo

Before Production ( my notes ): 
    ‚òê Uncomment `AUTH_PASSWORD_VALIDATORS` below.

    ‚òê Check `ALLOWED_HOSTS`
    ‚òê Check `CORS_ALLOWED_ORIGINS`

"""

import os
from pathlib import Path
from datetime import timedelta
from dotenv import load_dotenv

load_dotenv()

BASE_DIR = Path(__file__).resolve().parent.parent

# SECURITY WARNING: keep secret key used in production secret!
SECRET_KEY = os.getenv("SECRET_KEY")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.getenv("DEBUG") == "True"

if DEBUG:
    load_dotenv(".env.local")
else:
    load_dotenv(".env.prod")

ALLOWED_HOSTS = [
    "http://localhost:3000",
    "http://127.0.0.1:3000",
    os.getenv("BASE_URL"),
]

CORS_ALLOWED_ORIGINS = [
    "http://localhost:3000",
    "http://127.0.0.1:3000",
    os.getenv("CLIENT_URL"),
]


INSTALLED_APPS = [
    # Base
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    # Requirements
    "phonenumber_field",
    "django_filters",
    "rest_framework",
    "rest_framework_simplejwt",
    "rest_framework_simplejwt.token_blacklist",
    "corsheaders",
    # API
    "api",
    "api.auth",
    "api.exercises",
    "api.users",
]

REST_FRAMEWORK = {
    "DEFAULT_AUTHENTICATION_CLASSES": [
        "rest_framework.authentication.BasicAuthentication",
        "rest_framework.authentication.SessionAuthentication",
        "rest_framework_simplejwt.authentication.JWTAuthentication",
    ],
    "DEFAULT_PERMISSION_CLASSES": [
        "rest_framework.permissions.IsAuthenticated",
    ],
    "DEFAULT_FILTER_BACKENDS": [
        "django_filters.rest_framework.DjangoFilterBackend",
    ],
}

SIMPLE_JWT = {
    "ACCESS_TOKEN_LIFETIME": timedelta(minutes=5),
    "REFRESH_TOKEN_LIFETIME": timedelta(days=14),
    "ROTATE_REFRESH_TOKENS": True,
    "BLACKLIST_AFTER_ROTATION": True,
    # View modules
    # Serializer modules
    "TOKEN_OBTAIN_SERIALIZER": "api.auth.serializers.LoginSerializer",
    # "TOKEN_REFRESH_SERIALIZER": "rest_framework_simplejwt.serializers.TokenRefreshSerializer",
    # "TOKEN_VERIFY_SERIALIZER": "rest_framework_simplejwt.serializers.TokenVerifySerializer",
    # "TOKEN_BLACKLIST_SERIALIZER": "rest_framework_simplejwt.serializers.TokenBlacklistSerializer",
}


MIDDLEWARE = [
    # "corsheaders.middleware.CorsMiddleware",
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "corsheaders.middleware.CorsMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "core.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [BASE_DIR / "templates"],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "core.wsgi.application"

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": BASE_DIR / "db.sqlite3",
    }
}

AUTH_PASSWORD_VALIDATORS = [
    # {
    #     "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    # },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]

AUTHENTICATION_BACKENDS = [
    "django.contrib.auth.backends.ModelBackend",
]


# Sessions
SESSION_COOKIE_AGE = 60 * 60 * 24 * 30


# Internationalization
LANGUAGE_CODE = "en-us"
TIME_ZONE = "America/New_York"
USE_TZ = True
USE_I18N = True


# Media files -- DELETE
MEDIA_URL = "media/"
MEDIA_ROOT = BASE_DIR / "media"


# Static files
STATIC_URL = "static/"
STATIC_ROOT = BASE_DIR / "static"


# Default auto field for models.
DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

# Auth Model Directories
AUTH_USER_MODEL = "api_users.CustomUser"
AUTH_PROFILE_MODULE = "api_users.Profile"


PHONENUMBER_DEFAULT_REGION = "US"


INACTIVE_USER_LIFESPAN_DAYS = 30


# API = {}
